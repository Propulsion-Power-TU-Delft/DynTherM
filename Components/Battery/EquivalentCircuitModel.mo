within DynTherM.Components.Battery;
package EquivalentCircuitModel

  model ParametersInterpolation
    Modelica.Blocks.Tables.CombiTable2Ds Resistance0(table=[0,10,25,45; 0,
          0.002172727,0.001354545,0.000872728; 0.10,0.002172727,0.001227273,
          0.000854545; 0.20,0.001845455,0.001163636,0.000809091; 0.30,
          0.001736364,0.001090909,0.000772727; 0.40,0.001863636,0.001081818,
          0.000745455; 0.50,0.001718182,0.001090909,0.000754545; 0.60,
          0.001690909,0.0011,0.000772727; 0.70,0.001654545,0.001054545,
          0.000754545; 0.80,0.001781818,0.001045455,0.000736364; 0.90,0.0017,
          0.0011,0.000754545; 1.00,0.0017,0.0011,0.000754545],
                        smoothness=Modelica.Blocks.Types.Smoothness.ContinuousDerivative)
      annotation (Placement(transformation(extent={{22,40},{44,62}})));
    Modelica.Blocks.Tables.CombiTable2Ds Resistance1(table=[0,10,25,45; 0,
          0.001087396,0.001136109,0.000903105; 0.10,0.001012533,0.001027663,
          0.000897299; 0.20,0.001057631,0.000909021,0.000790583; 0.30,
          0.000983819,0.000847077,0.000740259; 0.40,0.000925584,0.000899386,
          0.000832152; 0.50,0.001297334,0.001115926,0.000994332; 0.60,
          0.001304479,0.001093345,0.000923337; 0.70,0.001288013,0.001092672,
          0.000890758; 0.80,0.000989563,0.001147979,0.000936039; 0.90,
          0.001262494,0.001067136,0.000636587; 1.00,0.001262494,0.001067136,
          0.000636587],             smoothness=Modelica.Blocks.Types.Smoothness.ContinuousDerivative)
      annotation (Placement(transformation(extent={{10,-54},{32,-32}})));
    Modelica.Blocks.Tables.CombiTable2Ds OpenCircuitVoltage(table=[0,10,25,45;
          0,3.401,3.395,3.394; 0.10,3.486,3.479,3.477; 0.20,3.566,3.559,3.554;
          0.30,3.607,3.608,3.609; 0.40,3.641,3.642,3.644; 0.50,3.698,3.697,
          3.7; 0.60,3.809,3.81,3.811; 0.70,3.909,3.911,3.912; 0.80,4.012,
          4.013,4.014; 0.90,4.118,4.121,4.121; 1.00,4.118,4.121,4.121],
                        smoothness=Modelica.Blocks.Types.Smoothness.ContinuousDerivative)
      annotation (Placement(transformation(extent={{44,-16},{62,2}})));
    Modelica.Blocks.Interfaces.RealOutput V_ocv annotation (Placement(
          transformation(extent={{90,-8},{110,12}}), iconTransformation(extent={{70,-10},
              {84,4}})));
    Modelica.Blocks.Interfaces.RealInput ChargeState annotation (Placement(
          transformation(extent={{-92,30},{-72,50}}),  iconTransformation(extent={{-92,30},
              {-72,50}})));
    Modelica.Blocks.Interfaces.RealInput Temp annotation (Placement(
          transformation(extent={{-96,-38},{-76,-18}}),  iconTransformation(
            extent={{-96,-38},{-76,-18}})));
    Modelica.Blocks.Interfaces.RealOutput R_1 annotation (Placement(
          transformation(extent={{82,-56},{102,-36}}), iconTransformation(extent={{68,-32},
              {82,-18}})));
    Modelica.Blocks.Interfaces.RealOutput R_0 annotation (Placement(
          transformation(extent={{104,24},{124,44}}),
                                                    iconTransformation(extent={{70,16},
              {84,30}})));
    Modelica.Blocks.Tables.CombiTable2Ds Capacitance1(table=[0,10,25,45; 0,
          27588.84528,26405.91704,33218.72872; 0.10,29628.66395,29192.44928,
          33433.6715; 0.20,28365.28052,33002.5379,37946.67986; 0.30,
          30493.41393,35415.9067,40526.35632; 0.40,32411.96909,33356.0896,
          36051.10605; 0.50,23124.34577,26883.50303,30171.00928; 0.60,
          22997.6872,27438.7316,32490.8457; 0.70,23291.69038,27455.6317,
          33679.1811; 0.80,30316.4124,26132.88222,32049.94664; 0.90,
          23762.48917,28112.63044,47126.31581; 1.00,23762.48917,28112.63044,
          47126.31581],                             smoothness=Modelica.Blocks.Types.Smoothness.ContinuousDerivative)
      annotation (Placement(transformation(extent={{24,-94},{46,-72}})));
    Modelica.Blocks.Interfaces.RealOutput C_1 annotation (Placement(
          transformation(extent={{82,-90},{102,-70}}), iconTransformation(extent={{68,-50},
              {82,-36}})));
    Modelica.Blocks.Tables.CombiTable1Ds combiTable1Ds(table=[0,-0.22; 0.10,-0.3;
          0.20,-0.1; 0.30,-0.05; 0.40,0.11; 0.50,0.12; 0.60,0.06; 0.70,-0.02;
          0.80,-0.02; 0.90,0.015; 1.00,0.025])
      annotation (Placement(transformation(extent={{-22,68},{-2,88}})));
    Modelica.Blocks.Interfaces.RealOutput Entropic_coff annotation (Placement(
          transformation(extent={{70,42},{84,56}}), iconTransformation(extent={{70,42},
              {84,56}})));
  equation
    connect(OpenCircuitVoltage.y, V_ocv) annotation (Line(points={{62.9,-7},{62.9,
            -8},{84,-8},{84,2},{100,2}}, color={0,0,127}));
    connect(Temp, Resistance1.u2) annotation (Line(points={{-86,-28},{-2,-28},{
            -2,-49.6},{7.8,-49.6}},                    color={0,0,127}));
    connect(Temp, OpenCircuitVoltage.u2) annotation (Line(points={{-86,-28},{
            -56,-28},{-56,-12.4},{42.2,-12.4}},
                                       color={0,0,127}));
    connect(Temp, Resistance0.u2) annotation (Line(points={{-86,-28},{-56,-28},
            {-56,44},{-20,44},{-20,44.4},{19.8,44.4}},
                                                  color={0,0,127}));
    connect(ChargeState, Resistance0.u1) annotation (Line(points={{-82,40},{8,
            40},{8,57.6},{19.8,57.6}},
                                   color={0,0,127}));
    connect(ChargeState, OpenCircuitVoltage.u1) annotation (Line(points={{-82,40},
            {-42,40},{-42,-1.6},{42.2,-1.6}}, color={0,0,127}));
    connect(ChargeState, Resistance1.u1) annotation (Line(points={{-82,40},{
            -42,40},{-42,-2},{-16,-2},{-16,-36.4},{7.8,-36.4}},
                                                            color={0,0,127}));
    connect(V_ocv, V_ocv)
      annotation (Line(points={{100,2},{100,2}}, color={0,0,127}));
    connect(Resistance1.y, R_1) annotation (Line(points={{33.1,-43},{33.1,-44},
            {78,-44},{78,-46},{92,-46}},
                                      color={0,0,127}));
    connect(Resistance0.y, R_0)
      annotation (Line(points={{45.1,51},{64,51},{64,34},{114,34}},
                                                           color={0,0,127}));
    connect(R_1, R_1)
      annotation (Line(points={{92,-46},{92,-46}}, color={0,0,127}));
    connect(Capacitance1.y, C_1) annotation (Line(points={{47.1,-83},{47.1,
            -84},{76,-84},{76,-80},{92,-80}}, color={0,0,127}));
    connect(ChargeState, Capacitance1.u1) annotation (Line(points={{-82,40},{
            -42,40},{-42,-2},{-16,-2},{-16,-76},{2,-76},{2,-76.4},{21.8,-76.4}},
          color={0,0,127}));
    connect(Temp, Capacitance1.u2) annotation (Line(points={{-86,-28},{-56,-28},
            {-56,-89.6},{21.8,-89.6}},      color={0,0,127}));
    connect(ChargeState, combiTable1Ds.u) annotation (Line(points={{-82,40},{
            -42,40},{-42,78},{-24,78}}, color={0,0,127}));
    connect(combiTable1Ds.y[1], Entropic_coff) annotation (Line(points={{-1,78},
            {70,78},{70,49},{77,49}},     color={0,0,127}));
    annotation (
      Icon(coordinateSystem(preserveAspectRatio=false), graphics={
          Text(
            extent={{-104,-10},{-48,-28}},
            textColor={238,46,47},
            textString="Temp (C)
 
",          textStyle={TextStyle.Bold}),
          Text(
            extent={{-108,62},{-52,44}},
            textColor={238,46,47},
            textStyle={TextStyle.Bold},
            textString="SOC
"),       Text(
            extent={{52,34},{108,16}},
            textColor={0,0,0},
            textStyle={TextStyle.Bold},
            textString="R_0
 
"),       Text(
            extent={{52,10},{108,-8}},
            textColor={0,0,0},
            textStyle={TextStyle.Bold},
            textString="V_ocv
 
"),       Text(
            extent={{50,-14},{106,-32}},
            textColor={0,0,0},
            textStyle={TextStyle.Bold},
            textString="R_1
 
"),       Text(
            extent={{56,-34},{112,-52}},
            textColor={0,0,0},
            textStyle={TextStyle.Bold},
            textString="C_1
 
"),       Bitmap(extent={{-42,-48},{48,58}},
            imageSource=
                ""
                 +
                "",
            fileName="modelica://DynTherM/Figures/interpolation.png"),
          Rectangle(
            extent={{-50,62},{58,-48}},
            lineColor={0,0,0},
            lineThickness=0.5),
          Line(
            points={{-74,40},{-50,40}},
            color={0,0,0},
            thickness=0.5),
          Line(
            points={{-74,-28},{-50,-28}},
            color={0,0,0},
            thickness=0.5),
          Line(
            points={{58,48},{70,48}},
            color={0,0,0},
            thickness=0.5),
          Line(
            points={{58,22},{70,22}},
            color={0,0,0},
            thickness=0.5),
          Line(
            points={{58,-2},{70,-2}},
            color={0,0,0},
            thickness=0.5),
          Line(
            points={{58,-26},{68,-26}},
            color={0,0,0},
            thickness=0.5),
          Line(
            points={{58,-44},{68,-44}},
            color={0,0,0},
            thickness=0.5)}),
      Diagram(coordinateSystem(preserveAspectRatio=false)),
      experiment(StopTime=50, __Dymola_Algorithm="Dassl"));
  end ParametersInterpolation;

  model ElectricalCircuit
    parameter Modelica.Units.SI.PerUnit eta = 0.98 "Charging/Discharging Efficiency";
    parameter Modelica.Units.SI.ElectricCharge capacity = 216000 "Battery Capacity in Ampere-second";
    parameter Modelica.Units.SI.PerUnit SOC_start "Starting charge state";
    parameter Modelica.Units.SI.PerUnit SOC_min = 0.00 "Minnimum possible charge state";
    parameter Modelica.Units.SI.PerUnit SOC_max = 1.00 "Maximum charge state";
    parameter Boolean steadyStateInit = false "=true if steady-state initialization";
    Modelica.Units.SI.PerUnit SOC "Battery SOC";
    Modelica.Units.SI.Power PowerOutFlow "Power Flowing into/out of battery";

    Modelica.Electrical.Analog.Basic.Ground ground
      annotation (Placement(transformation(extent={{-28,-78},{-8,-58}})));
    Modelica.Electrical.Analog.Sources.SignalCurrent signalCurrent
      annotation (Placement(transformation(extent={{62,24},{82,44}})));
    Modelica.Electrical.Analog.Sources.SignalVoltage signalVoltage
      annotation (Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=90,
          origin={-44,-16})));
    Modelica.Electrical.Analog.Basic.VariableResistor resistor0
      annotation (Placement(transformation(extent={{-26,26},{-6,46}})));
    Modelica.Electrical.Analog.Basic.VariableResistor resistor1
      annotation (Placement(transformation(extent={{20,44},{42,66}})));
    Modelica.Blocks.Interfaces.RealInput V_ocv annotation (Placement(
          transformation(extent={{-82,-12},{-74,-4}}), iconTransformation(extent={{-82,-12},
              {-74,-4}})));
    Modelica.Blocks.Interfaces.RealInput R_0 annotation (Placement(transformation(
            extent={{3,-3},{-3,3}},
          rotation=90,
          origin={-31,43}),              iconTransformation(extent={{3,-3},{
              -3,3}},
          rotation=90,
          origin={-31,43})));
    Modelica.Blocks.Interfaces.RealInput R_1 annotation (Placement(transformation(
            extent={{-130,76},{-104,102}}), iconTransformation(extent={{-4,-4},
              {4,4}},
          rotation=-90,
          origin={16,62})));
    Modelica.Electrical.Analog.Basic.VariableCapacitor capacitor1
      annotation (Placement(transformation(extent={{20,30},{40,10}})));
    Modelica.Blocks.Interfaces.RealInput C_1 annotation (Placement(transformation(
            extent={{-132,-102},{-106,-76}}), iconTransformation(extent={{3,-3},{
              -3,3}},
          rotation=-90,
          origin={15,-7})));
    Modelica.Blocks.Interfaces.RealInput current annotation (Placement(
          transformation(extent={{42,60},{66,84}}), iconTransformation(extent={{-3,-3},
              {3,3}},
          rotation=180,
          origin={81,-11})));
    Modelica.Blocks.Interfaces.RealOutput State_of_charge annotation (Placement(
          transformation(extent={{88,30},{106,48}}), iconTransformation(extent={{88,30},
              {106,48}})));
    Modelica.Blocks.Interfaces.RealOutput ThermalPower
      annotation (Placement(transformation(extent={{88,74},{108,94}}),
          iconTransformation(extent={{88,74},{108,94}})));
  equation
    der(SOC) = eta * signalCurrent.p.i/ capacity;
    resistor0.LossPower + resistor1.LossPower=ThermalPower;
    SOC = State_of_charge;
    PowerOutFlow = (signalCurrent.p.i * signalVoltage.n.v) - ThermalPower;

    connect(signalCurrent.n, ground.p) annotation (Line(points={{82,34},{86,
            34},{86,-52},{-18,-52},{-18,-58}}, color={0,0,255}));
    connect(signalVoltage.p, ground.p) annotation (Line(points={{-44,-26},{
            -44,-52},{-18,-52},{-18,-58}}, color={0,0,255}));
    connect(resistor0.p, signalVoltage.n)
      annotation (Line(points={{-26,36},{-44,36},{-44,-6}}, color={0,0,255}));
    connect(resistor0.n, resistor1.p) annotation (Line(points={{-6,36},{12,36},{12,
            55},{20,55}}, color={0,0,255}));
    connect(resistor1.n, signalCurrent.p) annotation (Line(points={{42,55},{48,55},
            {48,34},{62,34}}, color={0,0,255}));
    connect(V_ocv, signalVoltage.v) annotation (Line(points={{-78,-8},{-66,-8},
            {-66,-16},{-56,-16}},
                             color={0,0,127}));
    connect(R_0, resistor0.R)
      annotation (Line(points={{-31,43},{-42,43},{-42,10},{-16,10},{-16,48}},
                                                            color={0,0,127}));
    connect(resistor1.R, R_1)
      annotation (Line(points={{31,68.2},{31,89},{-117,89}}, color={0,0,127}));
    connect(capacitor1.p, resistor0.n) annotation (Line(points={{20,20},{12,20},{12,
            36},{-6,36}}, color={0,0,255}));
    connect(capacitor1.n, signalCurrent.p) annotation (Line(points={{40,20},{48,20},
            {48,34},{62,34}}, color={0,0,255}));
    connect(C_1, capacitor1.C) annotation (Line(points={{-119,-89},{30,-89},{
            30,8}},          color={0,0,127}));
    connect(signalCurrent.i, current)
      annotation (Line(points={{72,46},{72,72},{54,72}}, color={0,0,127}));
      //assertions
      assert(SOC > SOC_min, "Minnimum SOC reached");
      assert(SOC < SOC_max, "Maximum SOC reached");
  initial equation
    if steadyStateInit then
      der(SOC) = 0;
    else
      SOC = SOC_start;
    end if;
  equation
    connect(ThermalPower, ThermalPower)
      annotation (Line(points={{98,84},{98,84}},   color={0,0,127}));
    annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-120,
              -100},{120,100}}), graphics={Bitmap(extent={{-80,-74},{84,72}},
            imageSource=
                "",
            fileName="modelica://DynTherM/Figures/ECM.PNG")}),
                                       Diagram(coordinateSystem(
            preserveAspectRatio=false, extent={{-120,-100},{120,100}})),
      experiment(__Dymola_Algorithm="Dassl"));
  end ElectricalCircuit;
end EquivalentCircuitModel;
