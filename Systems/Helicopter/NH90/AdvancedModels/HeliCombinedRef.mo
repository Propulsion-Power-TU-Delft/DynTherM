within DynTherM.Systems.Helicopter.NH90.AdvancedModels;
model HeliCombinedRef
  "Helicopter combined advanced model made to match with EES Airbus NH90. Fixed passenger water and sensible heat input."
  outer DynTherM.Components.Environment environment;
  parameter Integer N_occupants[3] "Number of occupants: passengers, crew, pilots";
  parameter Boolean use_E_fixed=true  "Use the provided E_fixed value";
  parameter Boolean use_E_fixed_ws=true   "Use the provided E_fixed_ws value";
  parameter Modelica.Units.SI.Irradiance E_fixed=0 "Fixed solar radiation" annotation (Dialog(enable=use_E_fixed));
  parameter Modelica.Units.SI.Irradiance E_fixed_ws=900
    "Fixed solar radiation windscreen" annotation (Dialog(enable=use_E_fixed_ws));
    //   parameter Real R_win = 0.98 "Window transmissivity coefficient" annotation(Dialog(group="Specifications"));
    //   parameter Modelica.SIunits.Irradiance E_sun = 900 annotation(Dialog(group="Specifications"));
  parameter Modelica.Units.SI.MassFlowRate m_leak_in_ck=0.05
    "Cockpit leak in air flow" annotation (Dialog(group="Cockpit Airflow"));
  parameter Modelica.Units.SI.MassFlowRate m_fan_ck=0.3
    "Cockpit fan air through flow"
    annotation (Dialog(group="Cockpit Airflow"));
  parameter Modelica.Units.SI.MassFlowRate m_leak_in_cb=0.1
    "Cabin leak in air flow" annotation (Dialog(group="Cabin Airflow"));
  parameter Modelica.Units.SI.MassFlowRate m_fan_cb=0.6
    "Cabin fan air through flow" annotation (Dialog(group="Cabin Airflow"));
  parameter Modelica.Units.SI.MassFlowRate m_transfer=0.069
    "Transfer air (positive from cabin to cockpit)"
    annotation (Dialog(group="Cockpit Airflow"));
  parameter Real tau_ck = 0.96 "Cockpit recirculation rate" annotation(Dialog(group="Cockpit Airflow"));
  parameter Real tau_cb = 5/6 "Cabin recirculation rate" annotation(Dialog(group="Cabin Airflow"));
  parameter Real tau_leak = 0.5 "Leak out ratio cockpit/total" annotation(Dialog(group="Cockpit Airflow"));
  parameter Modelica.Units.SI.Temperature T_start_ck=281.35
    "Initial temperature of evaporator outflow"
    annotation (Dialog(tab="Evaporators", group="Cockpit"));
  parameter Modelica.Units.SI.MassFraction X_start_ck=0.0068
    "Initial water mass ratio of evaporator outflow"
    annotation (Dialog(tab="Evaporators", group="Cockpit"));
  parameter Modelica.Units.SI.Temperature T_start_cb=288.25
    "Initial temperature of evaporator outflow"
    annotation (Dialog(tab="Evaporators", group="Cabin"));
  parameter Modelica.Units.SI.MassFraction X_start_cb=0.0107
    "Initial water mass ratio of evaporator outflow"
    annotation (Dialog(tab="Evaporators", group="Cabin"));
  parameter Modelica.Units.SI.MassFraction X_env
    "Direct input used for ambient water humidity mass ratio" annotation (Dialog(group="Environment"));

  parameter Modelica.Units.SI.Temperature T_cb=301.15
    "Cabin target temperature"
    annotation (Dialog(tab="Evaporators", group="Cabin"));
  parameter Modelica.Units.SI.Temperature T_ck=301.15
    "Cockpit target temperature"
    annotation (Dialog(tab="Evaporators", group="Cockpit"));
  final parameter Modelica.Units.SI.MassFlowRate m_ext_ck=m_fan_ck*(1 -
      tau_ck) "Cockpit external air into fan";
  final parameter Modelica.Units.SI.MassFlowRate m_ext_cb=m_fan_cb*(1 -
      tau_cb) "Cabin external air into fan";
  final parameter Modelica.Units.SI.MassFlowRate m_leak_out_ck=tau_leak*(
      m_leak_in_ck + m_leak_in_cb + m_ext_ck + m_ext_cb) + heliCockpit.m_H20_occupants
    "Cockpit leak out air flow";
  final parameter Modelica.Units.SI.MassFlowRate m_leak_out_cb=(1 - tau_leak)
      *(m_leak_in_ck + m_leak_in_cb + m_ext_ck + m_ext_cb) + heliCabin.m_H20_occupants
    "Cabin leak out flow";
  Modelica.Units.SI.Temperature T_transfer;
  Modelica.Units.SI.MassFraction X_transfer;
  // Heat correlations
  replaceable model HTC_int =
    DynTherM.Components.HeatTransfer.HTCorrelations.BaseClassInternal
    constrainedby
    DynTherM.Components.HeatTransfer.HTCorrelations.BaseClassInternal
    "Internal heat correlation" annotation (choicesAllMatching=true, Dialog(tab="Heat Correlations"));
  replaceable model HTC_ext_ck =
    DynTherM.Components.HeatTransfer.HTCorrelations.BaseClassExternal
    constrainedby
    DynTherM.Components.HeatTransfer.HTCorrelations.BaseClassExternal
    "External cockpit heat correlation" annotation (choicesAllMatching=true, Dialog(tab="Heat Correlations"));
  replaceable model HTC_ext_cb =
    DynTherM.Components.HeatTransfer.HTCorrelations.BaseClassExternal
    constrainedby
    DynTherM.Components.HeatTransfer.HTCorrelations.BaseClassExternal
    "External cabin heat correlation" annotation (choicesAllMatching=true, Dialog(tab="Heat Correlations"));
  replaceable model HTC_ext_ws =
    DynTherM.Components.HeatTransfer.HTCorrelations.BaseClassExternal
    constrainedby
    DynTherM.Components.HeatTransfer.HTCorrelations.BaseClassExternal
    "External windscreen heat correlation" annotation (choicesAllMatching=true, Dialog(tab="Heat Correlations"));
  replaceable model HTC_floor =
    DynTherM.Components.HeatTransfer.HTCorrelations.BaseClassInternal
    constrainedby
    DynTherM.Components.HeatTransfer.HTCorrelations.BaseClassInternal
    "Floor heat correlation" annotation (choicesAllMatching=true, Dialog(tab="Heat Correlations"));
  replaceable model HTC_duct =
    DynTherM.Components.HeatTransfer.HTCorrelations.BaseClassInternal
    constrainedby
    DynTherM.Components.HeatTransfer.HTCorrelations.BaseClassInternal
    "Duct heat correlation" annotation (choicesAllMatching=true, Dialog(tab="Heat Correlations"));
  replaceable model HTC_engine =
    DynTherM.Components.HeatTransfer.HTCorrelations.BaseClassInternal
    constrainedby
    DynTherM.Components.HeatTransfer.HTCorrelations.BaseClassInternal
    "Engine heat correlation" annotation (choicesAllMatching=true, Dialog(tab="Heat Correlations"));
  replaceable model HTC_btp =
    DynTherM.Components.HeatTransfer.HTCorrelations.BaseClassInternal
    constrainedby
    DynTherM.Components.HeatTransfer.HTCorrelations.BaseClassInternal
    "Transmission heat correlation" annotation (choicesAllMatching=true, Dialog(tab="Heat Correlations"));

  Components.MassTransfer.SourceMassFlow leakOutCockpit(
    use_in_massFlow=false,
    use_in_T=false,
    use_in_Xw=false,
    use_di_T=true,
    use_di_Xw=true,
    T_di=heliCockpit.plenum.T,
    Xw_di=heliCockpit.plenum.X[1],
    allowFlowReversal=true,
    massFlow_nom=-m_leak_out_ck)
    annotation (Placement(transformation(extent={{-12,4},{-32,24}})));
  Components.MassTransfer.SourceMassFlow leakInCockpit(
    use_in_massFlow=false,
    use_in_T=false,
    use_in_Xw=false,
    allowFlowReversal=false,
    massFlow_nom=m_leak_in_ck,
    use_di_T=true,
    use_di_Xw=true,
    T_di=environment.T_amb,
    Xw_di=X_env)
    annotation (Placement(transformation(extent={{-96,2},{-76,22}})));
  Components.MassTransfer.SourceMassFlow airTransferCockpit(
    use_in_massFlow=false,
    use_in_T=false,
    use_in_Xw=false,
    allowFlowReversal=false,
    massFlow_nom=m_transfer,
    use_di_T=true,
    use_di_Xw=true,
    T_di=airTransferCabin.T_di,
    Xw_di=airTransferCabin.Xw_di)
    annotation (Placement(transformation(extent={{-96,-14},{-76,6}})));
  HeliCockpit heliCockpit(
    redeclare model HTC_int = HTC_int,
    redeclare model HTC_ext = HTC_ext_ck,
    redeclare model HTC_floor = HTC_floor,
    redeclare model HTC_duct = HTC_duct,
    redeclare model HTC_ext_ws = HTC_ext_ws,
    N_occupants=N_occupants,
    fixed_Q=true,
    Q_occupants=130*N_occupants[3],
    m_H20_occupants=0.00005*N_occupants[3],
    m_cockpit=1,
    redeclare model Fuselage_int = Materials.AirbusEES.Fuselage,
    redeclare model Fuselage_ext = Materials.AirbusEES.Fuselage,
    redeclare model Fuselage_core = Materials.AirbusEES.Fuselage,
    use_fus_radiation=false,
    use_r_eff=true)
    annotation (Placement(transformation(extent={{-64,12},{-44,32}})));
  Components.MassTransfer.SourceMassFlow leakInCabin(
    use_in_massFlow=false,
    use_in_T=false,
    use_in_Xw=false,
    allowFlowReversal=false,
    massFlow_nom=m_leak_in_cb,
    use_di_T=true,
    use_di_Xw=true,
    T_di=environment.T_amb,
    Xw_di=X_env)                 "air mass entering"
    annotation (Placement(transformation(extent={{-4,4},{16,24}})));
  Components.MassTransfer.SourceMassFlow leakOutCabin(
    use_di_T=true,
    use_di_Xw=true,
    T_di=heliCabin.plenum.T,
    Xw_di=heliCabin.plenum.X[1],
    allowFlowReversal=true,
    massFlow_nom=-m_leak_out_cb)
    annotation (Placement(transformation(extent={{80,12},{60,32}})));
  Components.MassTransfer.SourceMassFlow airTransferCabin(
    use_in_massFlow=false,
    use_in_T=false,
    use_in_Xw=false,
    massFlow_nom=-m_transfer,
    use_di_T=true,
    use_di_Xw=true,
    allowFlowReversal=true,
    T_di=T_transfer,
    Xw_di=X_transfer)
    annotation (Placement(transformation(extent={{80,-4},{60,16}})));
  HeliCabin heliCabin(
    redeclare model HTC_int = HTC_int,
    redeclare model HTC_ext = HTC_ext_cb,
    redeclare model HTC_floor = HTC_floor,
    redeclare model HTC_duct = HTC_duct,
    redeclare model HTC_engine = HTC_engine,
    redeclare model HTC_btp = HTC_btp,
    N_occupants=N_occupants,
    fixed_Q=true,
    m_cabin=1,
    Q_occupants=130*N_occupants[1],
    m_H20_occupants=0.00005*N_occupants[1],
    redeclare model Fuselage_int = Materials.AirbusEES.Fuselage,
    redeclare model Fuselage_ext = Materials.AirbusEES.Fuselage,
    redeclare model Fuselage_core = Materials.AirbusEES.Fuselage,
    use_fus_radiation=false,
    use_r_eff=true)
    annotation (Placement(transformation(extent={{28,20},{48,40}})));
  Modelica.Blocks.Interfaces.RealInput engineTempInput annotation (Placement(
        transformation(
        extent={{-15,-15},{15,15}},
        rotation=-90,
        origin={43,97})));
  Modelica.Blocks.Interfaces.RealInput transmissionTempInput annotation (
      Placement(transformation(
        extent={{-15,-15},{15,15}},
        rotation=-90,
        origin={67,97})));
  Modelica.Blocks.Interfaces.RealInput floorTempCabinInput annotation (
      Placement(transformation(
        extent={{-15,-15},{15,15}},
        rotation=-90,
        origin={-5,97})));
  Modelica.Blocks.Interfaces.RealInput targetTempCabinInput annotation (
      Placement(transformation(
        extent={{15,-15},{-15,15}},
        rotation=-90,
        origin={49,-79})));
  Modelica.Blocks.Interfaces.RealInput targetTempCockpitInput annotation (
      Placement(transformation(
        extent={{15,-15},{-15,15}},
        rotation=-90,
        origin={-51,-79})));
  Modelica.Blocks.Interfaces.RealInput floorTempCockpitInput annotation (
      Placement(transformation(
        extent={{-15,-15},{15,15}},
        rotation=-90,
        origin={-65,99})));
  Subsystems.Evaporator evaporatorCockpit(
    T_start_out=T_start_ck,
    X_start_out=X_start_ck,
    m_fan=m_fan_ck)
    annotation (Placement(transformation(extent={{-62,-24},{-42,-4}})));
  Subsystems.Evaporator evaporatorCabin(
    T_start_out=T_start_cb,
    X_start_out=X_start_cb,
    m_fan=m_fan_cb)
    annotation (Placement(transformation(extent={{32,-22},{52,-2}})));
  Components.MassTransfer.SourceMassFlow extAirCk(
    allowFlowReversal=false,
    use_di_T=true,
    use_di_Xw=true,
    use_di_massFlow=true,
    massFlow_di=m_ext_ck,
    T_di=environment.T_amb,
    Xw_di=X_env)
    annotation (Placement(transformation(extent={{-12,-30},{-32,-10}})));
  Components.MassTransfer.SourceMassFlow extAirCb(
    allowFlowReversal=false,
    use_di_T=true,
    use_di_Xw=true,
    use_di_massFlow=true,
    massFlow_di=m_ext_cb,
    T_di=environment.T_amb,
    Xw_di=X_env)
    annotation (Placement(transformation(extent={{86,-28},{66,-8}})));
  Components.MassTransfer.PressureSink pressureSinkCockpit(
    use_ambient=false,
    P_di=environment.P_amb_di,
    T_di=environment.T_amb_di,
    Xw_di=X_env)
    annotation (Placement(transformation(extent={{-36,24},{-16,44}})));
  Components.MassTransfer.PressureSink pressureSinkCabin(
    use_ambient=false,
    P_di=environment.P_amb_di,
    T_di=environment.T_amb_di,
    Xw_di=X_env)
    annotation (Placement(transformation(extent={{78,28},{98,48}})));
equation
  if m_transfer>0 then
    T_transfer = heliCabin.plenum.T "If air transfer from cabin, take cabin properties for air, else vice-versa";
    X_transfer = heliCabin.plenum.X[1];
  else
    T_transfer = heliCockpit.plenum.T;
    X_transfer = heliCockpit.plenum.X[1];
  end if;
  connect(leakInCockpit.outlet, heliCockpit.inletPort) annotation (Line(points={{-76,12},
          {-72,12},{-72,13.4},{-56,13.4}},            color={0,0,0}));
  connect(airTransferCockpit.outlet, heliCockpit.inletPort) annotation (Line(
        points={{-76,-4},{-72,-4},{-72,13.4},{-56,13.4}},   color={0,0,0}));
  connect(leakOutCabin.outlet, heliCabin.outletPort) annotation (Line(points={{60,22},
          {52,22},{52,21.6},{40,21.6}},          color={0,0,0}));
  connect(airTransferCabin.outlet, heliCabin.outletPort) annotation (Line(
        points={{60,6},{52,6},{52,21.6},{40,21.6}},        color={0,0,0}));
  connect(leakInCabin.outlet, heliCabin.inletPort) annotation (Line(points={{16,14},
          {20,14},{20,21.6},{35,21.6}},            color={0,0,0}));
  connect(transmissionTempInput, heliCabin.transmissionTempInput)
    annotation (Line(points={{67,97},{67,39.7},{43.1,39.7}}, color={0,0,127}));
  connect(engineTempInput, heliCabin.engineTempInput)
    annotation (Line(points={{43,97},{43,39.7},{38.9,39.7}}, color={0,0,127}));
  connect(floorTempCabinInput, heliCabin.floorTempInput)
    annotation (Line(points={{-5,97},{-5,39.9},{32.7,39.9}}, color={0,0,127}));
  connect(floorTempCockpitInput, heliCockpit.floorTempInput) annotation (Line(
        points={{-65,99},{-65,31.9},{-59.7,31.9}}, color={0,0,127}));
  connect(heliCockpit.outletPort, leakOutCockpit.outlet) annotation (Line(
        points={{-52,13.4},{-50,13.4},{-50,14},{-32,14}}, color={0,0,0}));
  connect(evaporatorCabin.plenumTemp, heliCabin.plenumTemp) annotation (Line(
        points={{32,-3},{30,-3},{30,-2},{24,-2},{24,34},{27,34}}, color={0,0,127}));
  connect(evaporatorCabin.outletPort, heliCabin.inletPort) annotation (Line(
        points={{33,-17},{20,-17},{20,21.6},{35,21.6}},
                                                      color={0,0,0}));
  connect(evaporatorCabin.targetTemp, targetTempCabinInput) annotation (Line(
        points={{32,-7},{30,-7},{30,-8},{24,-8},{24,-79},{49,-79}},
                                                                color={0,0,127}));
  connect(evaporatorCabin.thermalPort, heliCabin.ductThermalPort) annotation (
      Line(points={{32.6,-12},{28,-12},{28,16},{56,16},{56,26.6},{48.6,26.6}},
        color={191,0,0}));
  connect(evaporatorCabin.inletPortRecirc, heliCabin.outletPort) annotation (
      Line(points={{51,-13},{52,-13},{52,21.6},{40,21.6}},
                                                       color={0,0,0}));
  connect(evaporatorCockpit.inletPortRecirc, leakOutCockpit.outlet) annotation (
     Line(points={{-43,-15},{-38,-15},{-38,14},{-32,14}},
                                                        color={0,0,0}));
  connect(evaporatorCockpit.plenumTemp, heliCockpit.plenumTemp) annotation (
      Line(points={{-62,-5},{-64,-5},{-64,-4},{-68,-4},{-68,26},{-65,26}},
                                                                         color={
          0,0,127}));
  connect(evaporatorCockpit.targetTemp, targetTempCockpitInput) annotation (
      Line(points={{-62,-9},{-64,-9},{-64,-10},{-68,-10},{-68,-79},{-51,-79}},
                                                                         color={
          0,0,127}));
  connect(evaporatorCockpit.outletPort, heliCockpit.inletPort) annotation (Line(
        points={{-61,-19},{-72,-19},{-72,13.4},{-56,13.4}}, color={0,0,0}));
  connect(evaporatorCockpit.thermalPort, heliCockpit.ductThermalPort)
    annotation (Line(points={{-61.4,-14},{-66,-14},{-66,2},{-44.6,2},{-44.6,
          16.8}},
        color={191,0,0}));
  connect(extAirCk.outlet, evaporatorCockpit.inletPortFresh)
    annotation (Line(points={{-32,-20},{-43,-20},{-43,-19.4}},
                                                          color={0,0,0}));
  connect(extAirCb.outlet, evaporatorCabin.inletPortFresh)
    annotation (Line(points={{66,-18},{56,-18},{56,-17.4},{51,-17.4}},
                                                               color={0,0,0}));
  connect(pressureSinkCockpit.inlet, leakOutCockpit.outlet) annotation (
      Line(points={{-36,34},{-38,34},{-38,14},{-32,14}}, color={0,0,0}));
  connect(pressureSinkCabin.inlet, heliCabin.outletPort) annotation (Line(
        points={{78,38},{52,38},{52,21.6},{40,21.6}}, color={0,0,0}));
  annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
          Bitmap(
          extent={{-88,-60},{90,78}},
          imageSource=""
               + "",
          fileName=
              "modelica://DynTherM/../../MeetingPresentations/nh90Sketch.jpg"),               Text(
          extent={{-38,62},{26,42}},
          lineColor={0,0,0},
          fontSize=26,
          textString="EES Reference")}),                         Diagram(
        coordinateSystem(preserveAspectRatio=false)),
    experiment(StopTime=100));
end HeliCombinedRef;
